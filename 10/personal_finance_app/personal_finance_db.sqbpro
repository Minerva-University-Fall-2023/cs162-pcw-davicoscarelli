<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/davicoscarelli/Documents/GitHub/cs162-pcw-davicoscarelli/10/personal_finance_app/database/personal_finance_db.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1192"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:mainAccounts"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Accounts" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="66"/><column index="2" value="47"/><column index="3" value="84"/><column index="4" value="51"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Budgets" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="61"/><column index="2" value="47"/><column index="3" value="58"/><column index="4" value="47"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Transactions" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="83"/><column index="2" value="66"/><column index="3" value="47"/><column index="4" value="96"/><column index="5" value="58"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Users" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="47"/><column index="2" value="59"/><column index="3" value="77"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="create_tables.sql">CREATE TABLE Users (
    user_id INTEGER PRIMARY KEY,
    username TEXT NOT NULL,
    password TEXT NOT NULL
);

CREATE TABLE Accounts (
    account_id INTEGER PRIMARY KEY,
    user_id INTEGER,
    account_name TEXT NOT NULL,
    balance REAL NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Transactions (
    transaction_id INTEGER PRIMARY KEY,
    account_id INTEGER,
    amount REAL NOT NULL,
    transaction_date DATE NOT NULL,
    category TEXT NOT NULL,
    FOREIGN KEY (account_id) REFERENCES Accounts(account_id)
);

CREATE TABLE Budgets (
    budget_id INTEGER PRIMARY KEY,
    user_id INTEGER,
    category TEXT NOT NULL,
    amount REAL NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);
</sql><sql name="insert_mock.sql">-- Users
INSERT INTO Users (username, password) VALUES ('john_doe', 'password123');
INSERT INTO Users (username, password) VALUES ('jane_doe', 'password456');

-- Accounts
INSERT INTO Accounts (user_id, account_name, balance) VALUES (1, 'Checking', 5000);
INSERT INTO Accounts (user_id, account_name, balance) VALUES (2, 'Savings', 10000);

-- Transactions
INSERT INTO Transactions (account_id, amount, transaction_date, category) VALUES (1, -100, '2023-10-01', 'Groceries');
INSERT INTO Transactions (account_id, amount, transaction_date, category) VALUES (1, -200, '2023-10-02', 'Utilities');
INSERT INTO Transactions (account_id, amount, transaction_date, category) VALUES (1, 1000, '2023-10-03', 'Salary');

-- Budgets
INSERT INTO Budgets (user_id, category, amount) VALUES (1, 'Groceries', 400);
INSERT INTO Budgets (user_id, category, amount) VALUES (1, 'Utilities', 150);
</sql><sql name="queries.sql">-- Current balance of each account
SELECT account_name, balance FROM Accounts WHERE user_id = 1;

-- Total expenses in each category for the current month
SELECT category, SUM(amount) as total_expenses FROM Transactions WHERE amount &lt; 0 AND strftime('%Y-%m', transaction_date) = '2023-10' GROUP BY category;

-- Money left in the budget for each category
SELECT b.category, (b.amount + IFNULL(SUM(t.amount), 0)) as remaining_budget FROM Budgets b LEFT JOIN Transactions t ON b.category = t.category AND t.amount &lt; 0 AND strftime('%Y-%m', t.transaction_date) = '2023-10' WHERE b.user_id = 1 GROUP BY b.category;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
